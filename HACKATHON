ZAD1


1.

### ILOŚĆ PSÓW O IMIENIU ZAWIERAJĄCYM MAX
SELECT SUM(FREQUENCY)
FROM DOG_NAME_DATA
WHERE DOG_NAME LIKE '%MAX%'
 ;


2. Wszelkie wariancje nie są dla nas istotne ponieważ kluczowe pytanie brzmi czy dokładnie imię "Jess" lub "Max" jest bardziej popularne 
wśród dzieci lub psów.


3.

### ILOŚĆ DZIECI O IMIENIU ZAWIERAJĄCYM MAX
SELECT SUM(FREQUENCY)
FROM BABY_NAME_DATA
WHERE BABY_NAME LIKE '%MAX%'
 ;
 

4. Ciężko jest bezpośrednio porównać obie tabele przez duże zróżnicowanie wartości dlatego zdecydowałem się na osobne policzenie
stosunków procentowych dla psów i dzieci.


### PORÓWNANIE ZAWIERAJĄCYCH MAX DO CALOSCI U DZIECI
SELECT SUM(FREQUENCY) AS 'LICZBA IMION',
		
        SUM(CASE WHEN BABY_NAME LIKE 'MAX' THEN FREQUENCY
        ELSE 0 END) AS 'LICZBA IMION Z MAX' ,
        
        CONCAT(ROUND(SUM(CASE WHEN BABY_NAME LIKE 'MAX' THEN FREQUENCY
        ELSE 0 END) / SUM(FREQUENCY) * 100 , 2), "%") AS 'PROCENT MAX '
        
	FROM BABY_NAME_DATA

 ;
 
 
### PORÓWNANIE ZAWIERAJĄCYCH MAX DO CALOSCI U PSÓW
SELECT SUM(FREQUENCY) AS 'LICZBA IMION',
		
        SUM(CASE WHEN DOG_NAME LIKE '%MAX%' THEN FREQUENCY
        ELSE 0 END) AS 'LICZBA IMION Z MAX' ,
        
        CONCAT(ROUND(SUM(CASE WHEN DOG_NAME LIKE '%MAX%' THEN FREQUENCY
        ELSE 0 END) / SUM(FREQUENCY) * 100 , 2), "%") AS 'PROCENT MAX '
        
	FROM DOG_NAME_DATA
  
  
  
 
 


Wnioski:
Imię max jest bardziej popularne wśród dzieci (0,93%) niż wśród psów(0,88%)
Imię jess jest bardziej popularne wśród psów(0,16%) niż wśród dzieci(0%)
 
 ZAD2
 
 
 1.Raport finansowy
 
 
 1a
 
 #### WYDATKI OD 1 STYCZNIA 2018
 SELECT * FROM TRAN
WHERE TRAN_A>0 AND YEAR(TRAN_D)>=2018;

1b
#### WYDATKI PO 1 STYCZNIA 2018
SELECT * FROM TRAN
WHERE TRAN_A>0 AND DATE(TRAN_D) > DATE('2018-01-01');


1C

#### WYDATKI NA JEDZENIE NA WYNOS
 
SELECT * FROM TRAN
WHERE TRAN_A>0 AND 
YEAR(TRAN_D)>=2018 AND 
TRAN_BUSN_CATG LIKE 'Dining out' 
;

1D

##### WYDATKI W TONY'S PIZZA 2018

SELECT * FROM TRAN
WHERE TRAN_A>0 AND YEAR(TRAN_D)>=2018 AND
TRAN_BUSN_CATG LIKE 'Dining out' AND
TRAN_DESC LIKE 'TONYS PIZZA%'
;


#### SUMA WYDATKOW W TONY'S PIZZA 2018

 SELECT SUM(TRAN_A) FROM TRAN
WHERE TRAN_A>0 AND YEAR(TRAN_D)>=2018 AND TRAN_BUSN_CATG LIKE 'Dining out' AND TRAN_DESC LIKE 'TONYS PIZZA%'
;

 
 2. WYZWANIE PROGRAM LOJALNOŚCIOWY
 
 2a
 
#### WARUNEK 
SELECT *
FROM CUST_BASE
WHERE YEAR(JOIN_DATE)<=1970  OR (BRCH_CUST=1 AND YEAR(JOIN_DATE)<=1990) ;

2b

#### DOCHÓD ROCZNIE
SELECT *
FROM CUST_BASE
WHERE (YEAR(JOIN_DATE)<=1970  OR BRCH_CUST=1 AND YEAR(JOIN_DATE)<=1990)  AND RVNU_YEAR_A>=2000
;

2c

#### ZAMIANA WARUNKU

SELECT *
FROM CUST_BASE
WHERE YEAR(JOIN_DATE)<=1970  OR BRCH_CUST=1 AND YEAR(JOIN_DATE)<=1990  AND RVNU_YEAR_A>=2000
;


ZAD 3


3.1


SELECT
FIRST_NAME,
LAST_NAME,
email FROM CUSTOMER;

3.2


SELECT * FROM FILM
WHERE RENTAL_DURATION IN (3,5,7)
;


3.3


SELECT customer_id,
       first_name,
       last_name,
       amount,
       payment_date FROM payment
JOIN CUSTOMER USING(CUSTOMER_ID)
WHERE YEAR(PAYMENT_DATE)>=2006 AND CUSTOMER_ID<=100 AND AMOUNT>5;



3.4

SELECT customer_id,
       rental_id,
       last_name,
       amount,
       payment_date FROM payment
JOIN CUSTOMER USING(CUSTOMER_ID)
WHERE customer_id in(42,53,60,75) AND AMOUNT>5;





3.5

SELECT * FROM FILM
WHERE SPECIAL_FEATURES LIKE '%BEHIND THE SCENES%';


3.6

SELECT COUNT(*),
RENTAL_DURATION
 FROM FILM
 GROUP BY RENTAL_DURATION;



3.7

SELECT RATING,COUNT(*) FROM FILM
WHERE SPECIAL_FEATURES LIKE '%BEHIND THE SCENES%'
GROUP BY RATING
;


3.8


SELECT ROUND(AVG(RENTAL_RATE),2) AS 'AVERAGE RENTAL RATE',
MAX(RENTAL_RATE),
MIN(RENTAL_RATE) ,REPLACEMENT_COST,
COUNT(*) AS 'LICZBA FILMOW O DANYM REPLACEMENT COST'
FROM FILM
GROUP BY REPLACEMENT_COST
;






 
 
